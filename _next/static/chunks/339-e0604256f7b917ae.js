"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[339],{75360:function(n,e,t){t.d(e,{h:function(){return w}});var a=t(27812),i=t(59499),r=t(16835),o=t(67294),s=t(61730),d=t(26447),l=t(50135),u=t(5616),c=t(50480),m=t(69368),_=t(11057),p=t(11994),$=t(90629),g=t(73359),I=t(6812),y=t(3896),f=t(42283),b=t(71847),q=t(19015),v=t(72936),h=t(76301),S=t(10166),x=t(18574),k=t(33754),j=t(11163),A=t(15050),D=t(6911),T=t(85893);function C(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,a)}return t}function N(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?C(Object(t),!0).forEach(function(e){(0,i.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var w=function(n){var e=n.open,t=n.setOpen,i=n.initialFilters,p=(n.filters,n.setFilters),$=n.filtersVisibilityModel,S=void 0===$?{}:$,k=(0,v.x)(),C=k.hasRole,w=k.user,M=(0,j.useRouter)().query,L=(0,s.Z)("(max-width: 400px)"),U=(0,y.X)("form_data_issues_".concat(i.filterType),i),P=(0,r.Z)(U,2),R=P[0],z=P[1],H=(0,f.cI)({defaultValues:R}),B=H.control,Q=H.handleSubmit,W=H.register,E=H.reset,G=H.watch,V=H.getValues,Y=G("locationId"),K=(0,o.useState)(""),X=K[0],nn=K[1],ne=(0,g.t)(h.yR,{fetchPolicy:"network-only",variables:{accountId:w.accountId}}),nt=(0,r.Z)(ne,2),na=nt[0],ni=nt[1],nr=ni.loading,no=ni.data,ns=(no=void 0===no?{items:[]}:no).items,nd=(0,g.t)(h.SW),nl=(0,r.Z)(nd,2),nu=nl[0],nc=nl[1],nm=nc.loading,n_=nc.data,np=(n_=void 0===n_?{items:[]}:n_).items,n$=(0,g.t)(h._d,{variables:{where:{status:{_eq:"active"},Account_Locations:{accountId:{_eq:i.customerId}}}}}),ng=(0,r.Z)(n$,2),nI=ng[0],ny=ng[1],nf=ny.loading,nb=ny.data,nq=(nb=void 0===nb?{items:[]}:nb).items,nv=(0,g.t)(h.zR,{variables:{locationId:null==Y?void 0:Y.value}}),nh=(0,r.Z)(nv,2),nS=nh[0],nx=nh[1],nk=nx.loading,nj=nx.data,nA=(nj=void 0===nj?{items:[]}:nj).items,nD=(0,g.t)(h.by,{variables:{where:{type:{_eq:"supplier"}}}}),nT=(0,r.Z)(nD,2),nC=nT[0],nN=nT[1],nw=nN.loading,nZ=nN.data,nO=(nZ=void 0===nZ?{items:[]}:nZ).items,nF=(0,I.a)(h.K4,{variables:{accountId:w.accountId,limit:50,offset:0,q:""!==X?"%".concat(X,"%"):null}}),nJ=nF.data,nM=(nJ=void 0===nJ?{items:[]}:nJ).items,nL=nF.loading,nU=function(n){try{var e,a,r,o,s,d,l,u,c,m={customerId:null===(e=n.customerId)||void 0===e?void 0:e.value,endDate:null==n?void 0:n.endDate,locationId:null===(a=n.locationId)||void 0===a?void 0:a.value,sublocationId:null===(r=n.sublocationId)||void 0===r?void 0:r.value,managerId:n.managerId?w.id:null,tags:null===(o=n.tags)||void 0===o?void 0:o.map(function(n){return n.value}),startDate:null==n?void 0:n.startDate,status:null===(s=n.status)||void 0===s?void 0:s.map(function(n){return n.value}),supplierId:null===(d=n.supplierId)||void 0===d?void 0:d.value,userId:null===(l=n.userId)||void 0===l?void 0:l.value,customerManagerId:null===(u=n.customerManager)||void 0===u?void 0:u.value},_=null==n?void 0:n.q;if(_){m.q="%".concat(_,"%")||0;var $=/^\d+$/.test(_);"id"in i&&(m.id=$?Number(_):null),"meta"in i&&(m.meta=$?{invoiceNumbers:[_]}:null),"jobNumber"in i&&(m.jobNumber=$?String(_):null,m.invoiceNumber=$?Number(_):null)}null!==(c=m.status)&&void 0!==c&&c.length&&(m.isChangedStatusSelect=!0),p(function(n){return N(N({},n),m)});var g=V();z(function(n){return N(N({},n),g)})}finally{t(!1)}},nP=function(){p(i),E(i),sessionStorage.removeItem("form_data_issues_".concat(i.filterType)),t(!1)},nR=function(n){var e=!0;return n in S&&!S[n]&&(e=!1),e};return(0,T.jsx)(O,{keepMounted:!0,open:e,onClose:function(){return t(!1)},sx:Z.modal,children:(0,T.jsx)("form",{onSubmit:Q(nU),children:(0,T.jsx)(F,{children:(0,T.jsxs)(d.Z,{direction:"row",flexWrap:"wrap",justifyContent:"center",children:[(0,T.jsx)(l.Z,{fullWidth:!0,variant:"standard",color:"secondary",label:"Search...",name:"q",inputRef:W}),nR("status")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"status",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e||[],onChange:function(n,e){return t(e)},multiple:!0,limitTags:1,label:"Select status",options:(0,b.lR)(M.show)})}})}),C(["supplier"].concat((0,a.Z)(q.n)))&&nR("user")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"userId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e,onChange:function(n,e){return t(e)},label:"Select user",loading:nr,onOpen:function(){return na()},options:ns})}})}),C("admin")&&nR("tags")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(A.r,{control:B})}),!i.customerId&&C("admin")&&nR("customer")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"customerId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e,onChange:function(n,e){return t(e)},label:"Select customer",loading:nm,onOpen:function(){return nu()},options:np})}})}),C(["admin","customer"])&&nR("location")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"locationId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e,onChange:function(n,e){return t(e)},label:"Select location",loading:nf,onOpen:function(){return nI()},options:nq})}})}),C("admin")&&nR("supplier")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"supplierId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e,onChange:function(n,e){return t(e)},label:"Select supplier",loading:nw,onOpen:function(){return nC()},options:nO})}})}),Y&&C("admin")&&nR("sublocation")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"sublocationId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(x.F,{value:e,onChange:function(n,e){return t(e)},label:"Select sublocation",loading:nk,onOpen:function(){return nS()},options:nA})}})}),(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"startDate",control:B,render:function(n){return(0,T.jsx)(J,N(N({},n),{},{label:"Start date",renderInput:function(n){return(0,T.jsx)(l.Z,N(N({},n),{},{variant:"standard"}))}}))}})}),(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"endDate",control:B,render:function(n){return(0,T.jsx)(J,N(N({},n),{},{label:"End date",renderInput:function(n){return(0,T.jsx)(l.Z,N(N({},n),{},{variant:"standard"}))}}))}})}),C((0,a.Z)(q.SA))&&nR("accountManager")&&(0,T.jsx)(u.Z,{sx:Z.inputContainer(L),children:(0,T.jsx)(f.Qr,{name:"customerManager",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(D.q,{value:e,onChange:function(n,e){return t(e)},loading:nL,options:nM,setSearch:nn,textFieldProps:{color:"secondary",variant:"standard",label:"Select account manager"}})}})}),!i.noAssignToMeFilter&&C([].concat((0,a.Z)(q.SA),(0,a.Z)(q.n),(0,a.Z)(q.nx)))&&nR("accountManager")&&(0,T.jsx)(u.Z,{sx:Z.singleFilter(L),children:(0,T.jsx)(f.Qr,{name:"managerId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,T.jsx)(c.Z,{control:(0,T.jsx)(m.Z,{color:"secondary",checked:e,onChange:function(n){return t(n.target.checked)}}),label:"Assigned to me"})}})}),(0,T.jsxs)(d.Z,{width:"100%",direction:"row",justifyContent:"flex-end",spacing:2,sx:Z.bottomButtons,children:[(0,T.jsx)(_.Z,{variant:"contained",color:"danger",onClick:function(){return nP()},children:"Cancel"}),(0,T.jsx)(_.Z,{variant:"contained",color:"secondary",type:"submit",children:"Search"})]})]})})})})},Z={modal:{width:"40%"},inputContainer:function(n){return N({width:n?"100%":"50%"},n?{padding:"10px 0px"}:{padding:"10px"})},singleFilter:function(n){return N({width:"100%"},n?{padding:"10px 0px"}:{padding:"10px"})},checkboxContainer:function(n){return N({width:"100%"},n?{padding:"10px 0px"}:{padding:"10px"})},bottomButtons:{marginTop:"20px"}};w.defaultProps={open:!1,setOpen:function(){},initialFilters:{},filters:{},setFilters:function(){},filtersVisibilityModel:{}};var O=(0,S.Z)(p.Z)(function(){return{display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"}}),F=(0,S.Z)($.Z)(function(){return{padding:"24px",maxWidth:"700px",maxHeight:"100vh",overflowY:"scroll"}}),J=(0,S.Z)(k.M)(function(){return{"&.MuiFormControl-root.MuiTextField-root":{width:"100%"}}})},71847:function(n,e,t){t.d(e,{lR:function(){return _},Uu:function(){return m}});var a,i=t(16835);t(84209),t(22982);var r=t(71383),o=t(75063),s=t(59636),d=t(15641),l=t(4431),u=t(69496);(0,o.Ps)(a||(a=(0,r.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $adminId: Int\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"])),d.z,l.WW,s.aL,s.wd,u.Px);var c=t(33366),m=function(n){var e=["locationId","customerId","assetId"],t="";return n&&n.constructor===Object&&Object.keys(n).length>0&&(t="?",Object.entries(n).map(function(n){var a=(0,i.Z)(n,2),r=a[0],o=a[1];return o&&e.includes(r)&&(t+="".concat([r],"=").concat(o,"&")),0}),t=(t=t.substring(0,t.length-1)).replace("customerId","accountId")),t},_=function(n){var e=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];switch(n){case"offered":return c.cj.filter(function(n){return"offered"===n.value});case"current":return c.cj.filter(function(n){var e=n.value;return"accepted"===e||"inProgress"===e});case"openJobs":return c.cj.filter(function(n){var e=n.value;return"raised"===e||"pending"===e});case"raised":return c.cj.filter(function(n){return"raised"===n.value});case"pending":return c.cj.filter(function(n){return"pending"===n.value});case"past":return c.cj.filter(function(n){var t=n.value;return e.includes(t)});default:return c.cj}}},84209:function(n,e,t){t.d(e,{ct:function(){return u},lS:function(){return l},p7:function(){return d}});var a,i,r,o=t(71383),s=t(75063),d=(0,s.Ps)(a||(a=(0,o.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $type: String\n    $userId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),l=(0,s.Ps)(i||(i=(0,o.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Job_order_by!\n    $startDate: timestamptz\n    $status: [String!]\n    $type: [String!]\n    $userId: Int\n    $locationId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),u=function(n){var e=n.tagsWhere;return(0,s.Ps)(r||(r=(0,o.Z)(["\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $locationId: Int\n    $sublocationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $type: [String!]\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $tags: [Int!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            _and: [\n              {status: { _eq: "active" }},\n              {type: { _eq: "tags" }}\n            ]\n\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"])),e,e)}},22982:function(n,e,t){var a,i=t(71383),r=t(75063),o=t(59636),s=t(15641),d=t(4431),l=t(69496),u=function(n){var e=n.tagsWhere;return(0,r.Ps)(a||(a=(0,i.Z)(["\n  query GetDashboardList(\n    $accountId: Int\n    $customerId: Int\n    $supplierId: Int\n    $locationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $adminId: Int\n    $startDate: timestamptz\n    $endDate: timestamptz\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n    $number: String\n    $status: [String!]\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        manager: Manager {\n          id\n          fullName\n        }\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      job: Job {\n        status\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            status: { _eq: "active" }\n            type: { _eq: "tags" }\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"])),e,e,s.z,d.WW,o.aL,o.wd,l.Px)};e.Z=u},46353:function(n,e,t){t.d(e,{Y:function(){return a}});var a=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Job",t="";return null!=n&&n.length&&(t="\n      Taxonomy: {\n      _and: [\n        { entity: { _eq: ".concat(e,' } }\n        {\n          Taxonomy: {\n            status: { _eq: "active" }\n            _and: [{ id: { _in: [').concat(n,'] } }, { type: { _eq: "tags" } }]\n          }\n        }\n      ]\n    }\n  ')),t}},48829:function(n,e,t){t.d(e,{S:function(){return a}});var a=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}}}]);