(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1525],{26143:function(n,e,t){"use strict";t.d(e,{C:function(){return P}});var r=t(67294),i=t(93946),o=t(25464),a=t(18972),s=t(57976),c=t(14218),u=t(95429),l=t(91988),d=t(70983),m=t(46761),p=t(91682),f=t(39702),g=t(36804),y=t(51797),h=t(53630),b=t(50748),v=t(23132),_=t(88127),$=t(52186),I=t(59301),x=t(26447),q=t(15861),j=t(85893),S={add:(0,j.jsx)(c.Z,{}),archive:(0,j.jsx)(u.Z,{}),avatar:(0,j.jsx)(l.Z,{}),check:(0,j.jsx)(d.Z,{}),delete:(0,j.jsx)(m.Z,{}),description:(0,j.jsx)(p.Z,{}),download:(0,j.jsx)(f.Z,{}),info:(0,j.jsx)(g.Z,{}),edit:(0,j.jsx)(y.Z,{}),location:(0,j.jsx)(h.Z,{}),unarchive:(0,j.jsx)(b.Z,{}),uploadFile:(0,j.jsx)(v.Z,{}),receipt:(0,j.jsx)(_.Z,{}),visibility:(0,j.jsx)($.Z,{})},w={default:(0,j.jsx)(s.Z,{}),defaultHoriz:(0,j.jsx)(I.Z,{}),description:(0,j.jsx)(p.Z,{})},P=function(n){var e=n.actionsData,t=n.icon,s=n.row,c=n.disabled,u=(0,r.useState)(null),l=u[0],d=u[1],m=function(n){n.stopPropagation(),d(n.currentTarget)},p=function(){d(null)};return(0,j.jsxs)("div",{children:[(0,j.jsx)(i.Z,{sx:{":hover":{backgroundColor:"#DDDDDD"}},disabled:c,"aria-controls":"simple-menu","aria-haspopup":"true",onClick:m,children:w[t]}),(0,j.jsx)(o.Z,{id:"simple-menu",anchorEl:l,keepMounted:!0,open:Boolean(l),onClose:p,PaperProps:{sx:{borderRadius:2}},children:e(s).map(function(n,e){return(0,j.jsx)(a.Z,{disabled:n.disabled,onClick:function(e){n.onClick(e),p()},sx:{pl:3,pr:4},children:(0,j.jsxs)(x.Z,{direction:"row",alignItems:"center",spacing:2,children:[(null==S?void 0:S[n.icon])||null,(0,j.jsx)(q.Z,{children:n.tooltip})]})},e)})})]})};P.defaultProps={actionsData:function(){return[{disabled:!1,onClick:function(){},icon:"edit",tooltip:"Edit"}]},icon:"default",disabled:!1}},6911:function(n,e,t){"use strict";t.d(e,{q:function(){return f}});var r=t(59499),i=t(4730),o=t(23776),a=t(87918),s=t(50135),c=t(98456),u=t(67294),l=t(85893),d=["loading","setSearch","textFieldProps"];function m(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var f=function(n){var e=n.loading,t=n.setSearch,r=n.textFieldProps,m=(0,i.Z)(n,d),f=(0,u.useState)(""),g=f[0],y=f[1];return(0,u.useEffect)(function(){var n=setTimeout(function(){t(g)},500);return function(){return clearTimeout(n)}},[g,t]),(0,l.jsx)(o.Z,p(p({},m),{},{loading:e,onInputChange:function(n,e){y(e)},getOptionLabel:function(n){return n.label},renderTags:function(n,e){return n.map(function(n,t){return(0,l.jsx)(a.Z,p({size:"small",label:n.label},e({index:t})))})},renderInput:function(n){return(0,l.jsx)(s.Z,p(p(p({},n),r),{},{InputProps:p(p(p({},n.InputProps),r.InputProps||{}),{},{endAdornment:(0,l.jsxs)(l.Fragment,{children:[e?(0,l.jsx)(c.Z,{color:"inherit",size:20}):null,n.InputProps.endAdornment]})})}))}}))};f.defaultProps={color:"secondary",onChange:function(){},options:[],onOpen:function(){},setSearch:function(){},textFieldProps:{}}},77375:function(n,e,t){"use strict";t.d(e,{G5:function(){return m},UB:function(){return f},Ve:function(){return y},Wn:function(){return h},bD:function(){return b},kJ:function(){return p},rM:function(){return g}});var r,i,o,a,s,c,u,l=t(71383),d=t(75063),m=(0,d.Ps)(r||(r=(0,l.Z)(['\n  query GetFinancialJob(\n    $adminId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $startDate: timestamptz\n    $limit: Int\n    $status: [String]\n    $managerId: Int\n    $locationId: Int\n    $offset: Int\n    $supplierId: Int\n    $q: String\n    $orderBy: Job_order_by!\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        type: { _in: ["reactive", "ppm"] }\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        supplierId: { _eq: $supplierId }\n        managerId: { _eq: $managerId }\n        adminId: { _eq: $adminId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      description\n      reference\n      timingStart\n      scheduledAt\n      createdAt\n\n      customerTotal: customerFinances(path: "amountInfo.total")\n      supplierTotal: supplierFinances(path: "amountInfo.total")\n      customerVatTotal: customerFinances(path: "amountInfo.vatTotal")\n      supplierVatTotal: supplierFinances(path: "amountInfo.vatTotal")\n      customerExpensesTotal: customerFinances(path: "expensesInfo.expensesTotal")\n      supplierExpensesTotal: supplierFinances(path: "expensesInfo.expensesTotal")\n      customerRebateAmount: customerFinances(path: "rebate.amount")\n\n      slaId\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n      customer: Customer {\n        id\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      sla: SLA {\n        name\n      }\n      manager: Manager {\n        fullName\n        nameLast\n        nameFirst\n        id\n      }\n      service: Service {\n        id\n        name\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        type: { _in: ["reactive", "ppm"] }\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        supplierId: { _eq: $supplierId }\n        managerId: { _eq: $managerId }\n        adminId: { _eq: $adminId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),p=(0,d.Ps)(i||(i=(0,l.Z)(['\n  query GetCustomers(\n    $customerManagerId: Int\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Account_order_by!\n    $status: String\n  ) {\n    customers: Account(\n      limit: $limit\n      offset: $offset\n      where: {\n        type: { _eq: "customer" }\n        createdAt: { _eq: $date }\n        managerId: { _eq: $customerManagerId }\n        name: { _ilike: $q }\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      createdAt\n      name\n      companyNumber\n      vatId\n      website\n      status\n      addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n        id\n        registered\n        operating\n        trading\n        invoice\n        status\n        createdAt\n        address: Address {\n          id\n          name\n          addressLine1\n          addressLine2\n          addressLine3\n          city\n          county\n          geo\n          postCode\n          country: Country {\n            id\n            name\n          }\n        }\n      }\n      locations: Account_Locations {\n        id\n      }\n      finance: Financial {\n        id\n        invoicing\n        serviceRate\n        stripeId\n        totalRevenue\n        unpaidInvoices\n        creditLimit\n        creditRating\n        createdAt\n        amountOutstanding\n        accountId\n        approvalThreshold\n        arrangementFee\n        spendThreshold\n        defaultPaymentMethod\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        id\n        role\n        position\n        isContact\n        lastSignInAt\n        userId\n        user: User {\n          id\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n          email\n          createdAt\n          fullName\n          accounts: Account_Users {\n            id\n            role\n            position\n            isContact\n            status\n            account: Account {\n              id\n              name\n              type\n            }\n          }\n        }\n      }\n    }\n    meta: Account_aggregate(\n      where: {\n        type: { _eq: "customer" }\n        createdAt: { _eq: $date }\n        managerId: { _eq: $customerManagerId }\n        name: { _ilike: $q }\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),f=(0,d.Ps)(o||(o=(0,l.Z)(['\n  query GetCustomer($id: Int!) {\n    customer: Account_by_pk(id: $id) {\n      id\n      name\n      clientType: ClientType {\n        id\n        name\n      }\n      structure\n      companyNumber\n      vatId\n      website\n      status\n      createdAt\n      updatedAt\n      status\n      type\n      meta\n      usersMeta: Account_Users_aggregate {\n        aggregate {\n          count\n        }\n      }\n      propertiesMeta: Account_Locations_aggregate {\n        aggregate {\n          count\n        }\n      }\n      jobsMeta: CustomerJobs_aggregate {\n        aggregate {\n          count\n        }\n      }\n      addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n        id\n        registered\n        operating\n        trading\n        invoice\n        status\n        createdAt\n        address: Address {\n          id\n          name\n          addressLine1\n          addressLine2\n          addressLine3\n          city\n          county\n          geo\n          postCode\n          country: Country {\n            id\n            name\n          }\n        }\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n        phone\n        email\n      }\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        id\n        role\n        position\n        isContact\n        lastSignInAt\n        userId\n        user: User {\n          id\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n          email\n          createdAt\n          fullName\n          accounts: Account_Users {\n            id\n            role\n            position\n            isContact\n            status\n            account: Account {\n              id\n              name\n              type\n            }\n          }\n        }\n      }\n      bankAccounts: BankAccounts {\n        id\n        stripeId\n        accountNumber\n        routingNumber\n        bic\n        iban\n        status\n        default\n        createdAt\n      }\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      cards: Cards {\n        id\n        stripeId\n        type\n        last4\n        expYear\n        expMonth\n        status\n        default\n        createdAt\n      }\n      jobs: CustomerJobs {\n        id\n        title\n      }\n      finance: Financial {\n        id\n        invoicing\n        serviceRate\n        stripeId\n        totalRevenue\n        unpaidInvoices\n        creditLimit\n        creditRating\n        createdAt\n        amountOutstanding\n        accountId\n        approvalThreshold\n        arrangementFee\n        spendThreshold\n        defaultPaymentMethod\n      }\n      accountEntries: AccountEntries(order_by: { createdAt: asc }) {\n        id\n        outstandingAmount\n        type\n        entryId\n        currencyId\n        createdAt\n        balance\n        amount\n        accountId\n        updatedAt\n      }\n    }\n  }\n']))),g=(0,d.Ps)(a||(a=(0,l.Z)(["\n  query GetCustomerManage($id: Int!) {\n    customer: Account_by_pk(id: $id) {\n      id\n      name\n      website\n      companyNumber\n      vatId\n      meta\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        id\n        isContact\n        userId\n        user: User {\n          id\n          email\n          fullName\n          meta\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n        }\n      }\n      clientType: ClientType {\n        id\n        label: name\n        value: id\n      }\n      status\n      managerSelected: Manager {\n        id\n        label: fullName\n        value: id\n      }\n    }\n  }\n"]))),y=(0,d.Ps)(s||(s=(0,l.Z)(["\n  mutation AddCustomer($objects: [Account_insert_input!]!) {\n    insert_Account(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),h=(0,d.Ps)(c||(c=(0,l.Z)(["\n  mutation UpdateCustomer(\n    $customerId: Int!\n    $customer: Account_set_input\n    $userId: Int!\n    $user: User_set_input\n    $hasUpdateUser: Boolean!\n  ) {\n    update_Account_by_pk(pk_columns: { id: $customerId }, _set: $customer) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $userId }, _set: $user) @include(if: $hasUpdateUser) {\n      id\n    }\n  }\n"]))),b=(0,d.Ps)(u||(u=(0,l.Z)(["\n  mutation AddFinancial($objects: [Financial_insert_input!]!) {\n    insert_Financial(objects: $objects) {\n      returning {\n        id\n        accountId\n        locationId\n      }\n    }\n  }\n"])))},9164:function(n,e,t){"use strict";t.d(e,{r:function(){return l}});var r=t(59499),i=t(41664),o=t.n(i),a=t(23795),s=t(85893);function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var l=function(n){var e=n.children,t=n.href,r=n.noWrap,i=n.target,c=n.sx,l=void 0===c?{}:c;return r?(0,s.jsx)(s.Fragment,{children:e}):t?(0,s.jsx)(o(),{href:t,target:i,passHref:!0,children:(0,s.jsx)(a.Z,u(u({sx:l},n),{},{children:e}))}):(0,s.jsx)(a.Z,u(u({sx:l},n),{},{children:e}))};l.defaultProps={onClick:function(n){n.stopPropagation()}}},35137:function(n,e,t){"use strict";t.d(e,{C:function(){return p}});var r=t(59499);t(67294);var i=t(90948),o=t(61730),a=t(26447),s=t(15861),c=t(11057),u=t(85893);function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function d(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var m=(0,i.ZP)("img")({width:"300px",height:"250px"}),p=function(n){var e=n.imageSrc,t=n.sx,r=n.imageSx,i=n.title,l=n.titleSx,p=n.subtitleFirstLine,f=n.subtitleFirstLineSx,g=n.subtitleSecondLine,y=n.subtitleSecondLineSx,h=n.buttonText,b=n.onAction,v=(0,o.Z)("(max-width: 400px)");return(0,u.jsxs)(a.Z,{sx:d(d({},t),{},{width:"100%",height:"100%"}),justifyContent:"center",alignItems:"center",spacing:2,color:"#757575",children:[(0,u.jsx)(m,{src:e,sx:d(d({},r),{},{width:v?"250px":"300px"})}),(0,u.jsx)(s.Z,{typography:"h5",sx:d({},l),children:i}),(0,u.jsxs)(a.Z,{alignItems:"center",sx:{padding:"0px 10px",textAlign:"center"},children:[(0,u.jsx)(s.Z,{sx:d({},f),children:p}),(0,u.jsx)(s.Z,{sx:d({},y),children:g})]}),h&&b&&(0,u.jsx)(c.Z,{variant:"contained",color:"secondary",onClick:b,children:h})]})};p.defaultProps={title:"",subtitleFirstLine:"",subtitleSecondLine:"",sx:{},imageSx:{},titleSx:{},subtitleFirstLineSx:{},subtitleSecondLineSx:{},onAction:null}},76301:function(n,e,t){"use strict";t.d(e,{Ak:function(){return N},Cj:function(){return V},K4:function(){return nr},Qn:function(){return U},RJ:function(){return Y},SW:function(){return L},T_:function(){return H},UH:function(){return M},UM:function(){return ne},Ve:function(){return X},_d:function(){return R},_f:function(){return nt},by:function(){return W},cz:function(){return F},he:function(){return G},j$:function(){return E},kB:function(){return K},kU:function(){return Q},kx:function(){return B},nD:function(){return T},nP:function(){return no},pY:function(){return ni},qd:function(){return D},t1:function(){return z},yR:function(){return J},zR:function(){return nn}});var r,i,o,a,s,c,u,l,d,m,p,f,g,y,h,b,v,_,$,I,x,q,j,S,w,P,O,Z,C,A=t(71383),k=t(75063),F=(0,k.Ps)(r||(r=(0,A.Z)(["\n  query GetAddressForSelect($q: String, $entity: String!, $entityId: Int!) {\n    items: Address(\n      where: {\n        Address_Entities: { entity: { _eq: $entity }, entityId: { _eq: $entityId } }\n        _or: [\n          { addressLine1: { _eq: $q } }\n          { addressLine2: { _eq: $q } }\n          { addressLine3: { _eq: $q } }\n          { county: { _eq: $q } }\n          { postCode: { _eq: $q } }\n          { city: { _eq: $q } }\n        ]\n      }\n    ) {\n      label: addressLine1\n      value: id\n      id\n      name\n      addressLine1\n      addressLine2\n      addressLine3\n      postCode\n      county\n      country: Country {\n        name\n      }\n      city\n      Address_Entities {\n        invoice\n      }\n    }\n  }\n"]))),D=(0,k.Ps)(i||(i=(0,A.Z)(["\n  query GetAccountsForSelect($q: String, $type: String, $limit: Int, $offset: Int) {\n    items: Account(\n      where: { name: { _ilike: $q }, type: { _eq: $type } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]))),T=(0,k.Ps)(o||(o=(0,A.Z)(['\n  query GetTaxonomy($q: String, $id: Int) {\n    items: Taxonomy(\n      where: { type: { _eq: "assetCategory" }, status: { _eq: "active" } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      options: Taxonomies(\n        where: {\n          type: { _eq: "assetCategory" }\n          name: { _ilike: $q }\n          id: { _eq: $id }\n          status: { _eq: "active" }\n        }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']))),M=(0,k.Ps)(a||(a=(0,A.Z)(["\n  query GetAssetsForSelect($locationId: Int, $q: String, $categoryId: Int, $bookable: String) {\n    items: Asset(\n      where: {\n        categoryId: { _eq: $categoryId }\n        locationId: { _eq: $locationId }\n        name: { _ilike: $q }\n        bookable: { _eq: $bookable }\n      }\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n      parent: ParentAsset {\n        id\n        name\n      }\n      media: Media {\n        id\n        item: Medium {\n          id\n          name\n          filename\n          meta\n          category\n          type\n        }\n      }\n    }\n  }\n"]))),L=(0,k.Ps)(s||(s=(0,A.Z)(['\n  query GetCustomersForSelect($q: String, $limit: Int, $offset: Int) {\n    items: Account(\n      where: { name: { _ilike: $q }, type: { _eq: "customer" } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      admin: Admins {\n        id: adminId\n      }\n      label: name\n      spendThreshold: meta(path: "$.finance.spendThreshold")\n      serviceRateLabour: meta(path: "$.finance.serviceRateLabour")\n      serviceRateExpenses: meta(path: "$.finance.serviceRateExpenses")\n      value: id\n    }\n  }\n']))),U=(0,k.Ps)(c||(c=(0,A.Z)(["\n  query GetJobsForSelect($_q: Int, $locationId: Int) {\n    items: Job(\n      where: {\n        Location: { id: { _eq: $locationId } }\n        _or: [{ id: { _eq: $_q } }, { Invoices: { id: { _eq: $_q } } }]\n      }\n      order_by: { title: asc }\n    ) {\n      label: label\n      value: id\n      number\n      createdAt\n      description\n      status\n      timingStart\n      title\n      type\n      Location {\n        name\n      }\n      Taxonomy {\n        Taxonomy {\n          shortJobDescription: name\n        }\n      }\n    }\n  }\n"]))),G=(0,k.Ps)(u||(u=(0,A.Z)(['\n  query GetManagersForSelect($userId: Int, $accountId: Int!, $q: String) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          role: { _in: ["owner", "manager"] }\n          status: { _eq: "active" }\n          Account: { id: { _eq: $accountId } }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        id: { _neq: $userId }\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n']))),N=(0,k.Ps)(l||(l=(0,A.Z)(['\n  query GetManagersForSelect(\n    $userId: Int\n    $accountId: Int!\n    $q: String\n    $invoiceThreshold: numeric\n    $quoteThreshold: numeric\n  ) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          role: { _in: ["owner", "manager"] }\n          status: { _eq: "active" }\n          Account: { id: { _eq: $accountId } }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        id: { _neq: $userId }\n        _and: [\n          {\n            _or: [\n              { invoiceThreshold: { _gt: $invoiceThreshold } }\n              { invoiceThreshold: { _is_null: true } }\n            ]\n          }\n          {\n            _or: [\n              { quoteThreshold: { _gt: $quoteThreshold } }\n              { quoteThreshold: { _is_null: true } }\n            ]\n          }\n        ]\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n']))),E=(0,k.Ps)(d||(d=(0,A.Z)(["\n  query GetPostCodeAreaForSelect($countryId: Int, $q: String) {\n    items: PostcodeArea(\n      where: { name: { _ilike: $q }, countryId: { _eq: $countryId } }\n      order_by: { name: asc }\n    ) {\n      area\n      label: name\n      value: id\n    }\n  }\n"]))),R=(0,k.Ps)(m||(m=(0,A.Z)(['\n  query GetPropertiesForSelect($where: Location_bool_exp, $limit: Int, $offset: Int) {\n    items: Location(where: $where, order_by: { name: asc }, limit: $limit, offset: $offset) {\n      label: name\n      value: id\n      access\n      permitsRequired\n      registeredAddress: Addresses(\n        where: { entity: { _eq: "Location" }, registered: { _eq: true } }\n      ) {\n        address: Address {\n          id\n          addressLine1\n          addressLine2\n          addressLine3\n          county\n          country: Country {\n            name\n          }\n          postCode\n          city\n        }\n      }\n    }\n  }\n']))),B=(0,k.Ps)(p||(p=(0,A.Z)(['\n  query GetServicesForSelect($q: String, $limit: Int, $offset: Int) {\n    items: Service(\n      where: { name: { _ilike: $q }, status: { _eq: "active" } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n']))),z=(0,k.Ps)(f||(f=(0,A.Z)(["\n  query GetSlasForSelect($q: String, $adminId: Int, $type: String) {\n    items: SLA(\n      where: { name: { _ilike: $q }, type: { _eq: $type }, adminId: { _eq: $adminId } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]))),H=(0,k.Ps)(g||(g=(0,A.Z)(["\n  query GetSlasForSelectNew($where: SLA_bool_exp, $limit: Int, $offset: Int) {\n    items: SLA(where: $where, order_by: { name: asc }, limit: $limit, offset: $offset) {\n      label: name\n      value: id\n    }\n  }\n"]))),W=(0,k.Ps)(y||(y=(0,A.Z)(["\n  query GetSuppliersForSelect($where: Account_bool_exp, $limit: Int, $offset: Int) {\n    items: Account(where: $where, limit: $limit, offset: $offset, order_by: { name: asc }) {\n      label: name\n      value: id\n    }\n  }\n"]))),J=(0,k.Ps)(h||(h=(0,A.Z)(['\n  query GetUsersForSelect($accountId: Int, $q: String, $limit: Int, $offset: Int) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          accountId: { _eq: $accountId }\n          isContact: { _eq: true }\n          status: { _eq: "active" }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n      }\n      order_by: { nameFirst: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      label: fullName\n      value: id\n      email\n      phone\n    }\n  }\n']))),Y=(0,k.Ps)(b||(b=(0,A.Z)(['\n  query GetUsersForSelect($q: String) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n      email\n      phone\n    }\n  }\n']))),V=(0,k.Ps)(v||(v=(0,A.Z)(["\n  query GetTaxonomyGroupForSelect($q: String, $type: String!) {\n    items: Taxonomy(\n      where: { isGroup: { _eq: true }, name: { _ilike: $q }, type: { _eq: $type } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]))),X=(0,k.Ps)(_||(_=(0,A.Z)(['\n  query GetTaxonomy($q: String) {\n    items: Taxonomy(where: { type: { _eq: "expenseCategoryGroup" } }, order_by: { name: asc }) {\n      label: name\n      options: Taxonomies(\n        where: { type: { _eq: "expenseCategory" }, name: { _ilike: $q } }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']))),Q=(0,k.Ps)($||($=(0,A.Z)(['\n  query GetCompliancesForSelect($q: String, $locationId: Int) {\n    items: Taxonomy(where: { type: { _eq: "complianceCategory" } }, order_by: { name: asc }) {\n      label: name\n      options: Compliances(\n        where: {\n          name: { _ilike: $q }\n          Compliance_Entities: { Location: { id: { _eq: $locationId } } }\n        }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']))),K=(0,k.Ps)(I||(I=(0,A.Z)(["\n  query GetUserRole($userId: Int!, $accountId: Int!) {\n    accountUsers: Account_User(\n      where: { userId: { _eq: $userId }, accountId: { _eq: $accountId } }\n    ) {\n      role\n    }\n  }\n"]))),nn=(0,k.Ps)(x||(x=(0,A.Z)(["\n  query GetSublocationsForSelect($locationId: Int!, $q: String, $limit: Int, $offset: Int) {\n    items: Sublocation(\n      where: { name: { _ilike: $q }, locationId: { _eq: $locationId }, active: { _eq: true } }\n      limit: $limit\n      offset: $offset\n      order_by: { createdAt: desc }\n    ) {\n      value: id\n      label: name\n    }\n  }\n"]))),ne=(0,k.Ps)(q||(q=(0,A.Z)(['\n  query GetTaxonomy($q: String, $id: Int, $limit: Int, $offset: Int) {\n    items: Taxonomy(\n      where: {\n        id: { _eq: $id }\n        type: { _eq: "assetCategory" }\n        isGroup: { _eq: false }\n        status: { _eq: "active" }\n        name: { _ilike: $q }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n']))),nt=(0,k.Ps)(j||(j=(0,A.Z)(["\n  query GetTaxonomyForSelect(\n    $where: Taxonomy_bool_exp\n    $limit: Int\n    $offset: Int\n    $orderBy: Taxonomy_order_by!\n  ) {\n    items: Taxonomy(where: $where, limit: $limit, offset: $offset, order_by: [$orderBy]) {\n      value: id\n      label: name\n    }\n  }\n"])));(0,k.Ps)(S||(S=(0,A.Z)(['\n  query GetTagsForTask($q: String!, $limit: Int = 50, $offset: Int = 0) {\n    items: Taxonomy(\n      where: { name: { _ilike: $q }, status: { _eq: "active" }, type: { _eq: "taskTags" } }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      value: id\n      label: name\n    }\n  }\n']))),(0,k.Ps)(w||(w=(0,A.Z)(['\n  query GetTagsForEntity(\n    $entityId: Int\n    $entity: String!\n    $q: String!\n    $limit: Int = 50\n    $offset: Int = 0\n  ) {\n    tags: Taxonomy(\n      where: {\n        name: { _ilike: $q }\n        status: { _eq: "active" }\n        type: { _eq: "taskTags" }\n        _not: { Taxonomy_Entities: { entity: { _eq: $entity }, entityId: { _eq: $entityId } } }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      id\n      name\n      meta\n    }\n  }\n']))),(0,k.Ps)(P||(P=(0,A.Z)(['\n  query GetEntityTags($entityId: Int!, $entity: String!) {\n    tags: Taxonomy_Entity(\n      where: {\n        entity: { _eq: $entity }\n        entityId: { _eq: $entityId }\n        Taxonomy: { status: { _eq: "active" }, type: { _eq: "taskTags" } }\n      }\n      order_by: { id: desc }\n    ) {\n      id\n      tag: Taxonomy {\n        id\n        name\n        meta\n      }\n    }\n  }\n'])));var nr=(0,k.Ps)(O||(O=(0,A.Z)(["\n  query GetCustomerManagers($accountId: Int, $q: String, $limit: Int, $offset: Int) {\n    items: User(\n      where: { Account_Users: { accountId: { _eq: $accountId } }, fullName: { _ilike: $q } }\n      order_by: { fullName: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n"]))),ni=(0,k.Ps)(Z||(Z=(0,A.Z)(["\n  query GetServiceSchedulesForSelect(\n    $q: String\n    $serviceId: Int\n    $entity: service_schedule_entity\n    $entityId: Int\n    $limit: Int = 50\n    $offset: Int = 0\n  ) {\n    items: ServiceSchedule(\n      where: {\n        name: { _ilike: $q }\n        serviceId: { _eq: $serviceId }\n        entity: { _eq: $entity }\n        entityId: { _eq: $entityId }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]))),no=(0,k.Ps)(C||(C=(0,A.Z)(['\n  query GetPropertyById($id: Int!) {\n    item: Location_by_pk(id: $id) {\n      label: name\n      value: id\n      access\n      registeredAddress: Addresses(\n        where: { entity: { _eq: "Location" }, registered: { _eq: true } }\n      ) {\n        address: Address {\n          id\n          addressLine1\n          addressLine2\n          addressLine3\n          county\n          country: Country {\n            name\n          }\n          postCode\n          city\n        }\n      }\n    }\n  }\n'])))},32836:function(n,e,t){"use strict";t.d(e,{i:function(){return j}});var r=t(59499),i=t(67294),o=t(11163),a=t(83148),s=t(26447),c=t(15861),u=t(90948),l=t(5616),d=t(41796),m=t(87361),p=t(42096),f=t(87043),g=t(61730),y=t(58886),h=t(70872),b=t(85893);function v(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function _(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?v(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):v(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var $=function(n){var e=n.currentPage,t=n.totalCount,r=n.pageSize,i=n.onPageChange,o=(0,g.Z)("(max-width:400px)"),a=(0,g.Z)("(max-width:500px)");return(0,b.jsx)(I,{mb:2,page:e,count:Math.ceil(t/r),onChange:function(n,e){return i(e)},variant:"outlined",shape:"rounded",size:o?"small":"medium",hidePrevButton:1===e,hideNextButton:e===Math.ceil(t/r),siblingCount:a?0:1,renderItem:function(n){return(0,b.jsx)(y.Z,_({slots:{previous:function(){return"Previous"},next:function(){return"Next"}}},n))}})};$.defaultProps={currentPage:1,totalCount:0,pageSize:50,onPageChange:function(){}};var I=(0,u.ZP)(h.Z)(function(n){var e,t=n.hidePrevButton,i=n.hideNextButton,o=n.theme;return e={},(0,r.Z)(e,"&.MuiPagination-root",{alignSelf:"center",marginTop:"16px"}),(0,r.Z)(e,"& .MuiPaginationItem-root",{fontWeight:600,margin:0,borderRadius:0}),(0,r.Z)(e,"& .MuiPagination-ul > li:last-child .MuiPaginationItem-previousNext:last-child",{margin:0,borderRadius:"0 5px 5px 0"}),(0,r.Z)(e,"& .MuiPagination-ul > li:first-child .MuiPaginationItem-previousNext:last-child",{margin:0,borderRadius:"5px 0 0 5px"}),(0,r.Z)(e,"& button.Mui-selected",_(_({color:o.palette.white.main,backgroundColor:o.palette.secondary.main},i?{borderRadius:"0 5px 5px 0"}:{}),t?{borderRadius:"5px 0 0 5px"}:{})),e});function x(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function q(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?x(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):x(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var j=(0,i.forwardRef)(function(n,e){var t=n.columns,r=n.history,a=n.initialSort,u=n.meta,l=n.refetch,d=n.paginationSize,g=n.containerHeight,y=n.noResultsMessage,h=n.autoHeight,v=(0,o.useRouter)(),_=v.query,I=void 0===_?{}:_,x=(0,i.useState)(parseInt(null==I?void 0:I.page,10)||1),j=x[0],P=x[1],O=(0,i.useState)(d||f.C1.paginationSize),Z=O[0],C=O[1];a||(a={item:"createdAt",order:"desc"});var A=(0,i.useState)({item:a.item,order:a.order}),k=A[0],F=A[1],D=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=v.query,t=void 0===e?{}:e;if(n>1?t.page=n:delete t.page,!(Object.keys(t).length>0))return{};var r=Object.keys(t).map(function(e){return"page"===e?"".concat(e,"=").concat(n):"".concat(e,"=").concat(t[e])}).join("&");return"?".concat(r)},T=function(){F({item:a.item,order:a.order}),P(1);var n=D();v.push(n),C(d||f.C1.paginationSize)};(0,i.useImperativeHandle)(e,function(){return{currentPage:j,pageSize:Z,sort:k,resetPagination:function(){T()}}});var M=function(n){var e=D(n);r&&v.push(e),P(n),!r&&l&&l()},L=function(n){n&&n.field&&n.sort?(F({item:t.find(function(e){return e.field===n.field}).sortName||n.field||n.item||a.item,order:n.sort||n.order||a.order}),l&&l()):(F({item:a.item,order:a.order}),l&&l())};return(0,b.jsxs)(S,{containerHeight:g,children:[(0,b.jsx)(w,q({hideFooter:!0,disableColumnMenu:!0,disableSelectionOnClick:!0,autoHeight:h,sortingMode:"server",onSortModelChange:function(n){return L(n[0])},columns:t,pageSize:Z,slots:{columnSortedAscendingIcon:function(){return(0,b.jsx)(m.Z,{})},columnSortedDescendingIcon:function(){return(0,b.jsx)(p.Z,{})},columnUnsortedIcon:function(){return(0,b.jsxs)(s.Z,{alignItems:"center",sx:{width:"33px"},children:[(0,b.jsx)(m.Z,{sx:{marginBottom:"-15px"}}),(0,b.jsx)(p.Z,{})]})},noResultsOverlay:function(){return(0,b.jsx)(s.Z,{height:"100%",alignItems:"center",justifyContent:"center",spacing:1,p:1,children:(0,b.jsx)(c.Z,{children:y})})},noRowsOverlay:function(){return(0,b.jsx)(s.Z,{height:"100%",alignItems:"center",justifyContent:"center",spacing:1,p:1,children:(0,b.jsx)(c.Z,{children:y})})}}},n)),u&&Math.ceil(u.aggregate.totalCount/Z)>1&&(0,b.jsx)($,{currentPage:j,totalCount:u.aggregate.totalCount,pageSize:Z,onPageChange:M})]})});j.defaultProps={columns:[],history:!1,loading:!1,rows:[],noResultsMessage:"There are no results.",autoHeight:!0};var S=(0,u.ZP)(l.Z)(function(n){return{height:n.containerHeight,display:"flex",flexDirection:"column"}}),w=(0,u.ZP)(a.s)(function(n){var e,t=n.theme,i=n.hideHeader,o=(n.rows,n.loading,n.rowHeight),a=n.isPdf;return e={"--DataGrid-overlayHeight":"40px"},(0,r.Z)(e,"&.MuiDataGrid-root",q({color:t.palette.black.main,border:"none"},a&&{"@media print":{display:"block"}})),(0,r.Z)(e,"& .MuiDataGrid-main",q({},a&&{"@media print":{overflow:"visible !important"}})),(0,r.Z)(e,"& .MuiDataGrid-columnHeaders",q(q({},i&&{display:"none"}),{},{"& .MuiDataGrid-iconButtonContainer":{visibility:"visible","& .MuiButtonBase-root.MuiIconButton-root":{backgroundColor:"inherit",color:t.palette.black.main,"&:hover":{backgroundColor:"rgba(0, 0, 0, 0.1)"}}}})),(0,r.Z)(e,"& .MuiDataGrid-virtualScroller",q(q({},i&&{marginTop:"0 !important"}),a&&{"@media print":{overflow:"visible !important"}})),(0,r.Z)(e,"& .MuiDataGrid-iconSeparator",{opacity:0}),(0,r.Z)(e,"& .MuiDataGrid-columnHeaderTitle",{fontWeight:700}),(0,r.Z)(e,"& .MuiButtonBase-root.MuiDataGrid-columnHeaderTitle",{fontWeight:700}),(0,r.Z)(e,"& .MuiDataGrid-virtualScrollerContent",q({},a&&{height:"initial !important",minHeight:"initial !important"})),(0,r.Z)(e,"& .MuiDataGrid-virtualScrollerRenderZone",q({},a&&{position:"relative"})),(0,r.Z)(e,"& .MuiDataGrid-overlayWrapper",(0,r.Z)({},"& .MuiCircularProgress-root",{color:t.palette.secondary.main})),(0,r.Z)(e,"& .MuiDataGrid-row",q({},a&&{minHeight:"".concat(o,"cm !important"),maxHeight:"".concat(o,"cm !important")})),(0,r.Z)(e,"& .MuiDataGrid-row > .MuiDataGrid-cell",q({},a&&{minHeight:"".concat(o,"cm !important"),maxHeight:"".concat(o,"cm !important")})),(0,r.Z)(e,"& .MuiDataGrid-row.even",{backgroundColor:t.palette.muiLightGray.main,"&:hover, &.Mui-hovered":{backgroundColor:(0,d.Fq)(t.palette.muiLightGray.main,.3),"@media (hover: none)":{backgroundColor:"transparent"}},"&.Mui-selected":{backgroundColor:(0,d.Fq)(t.palette.muiLightGray.main,.3+t.palette.action.selectedOpacity),"&:hover, &.Mui-hovered":{backgroundColor:(0,d.Fq)(t.palette.muiLightGray.main,.3+t.palette.action.selectedOpacity+t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:(0,d.Fq)(t.palette.muiLightGray.main,.3+t.palette.action.selectedOpacity)}}}}),e})},42846:function(n,e,t){"use strict";t.d(e,{x:function(){return l}});var r=t(59499),i=t(67294),o=t(96486),a=t(87043),s=function(n){try{return JSON.parse(n)}catch(e){return!1}};function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var l=function(n){var e,t,c,l,d,m,p,f,g,y,h,b=n.filters,v=n.newFilters,_=n.initialSort,$=(0,i.useRef)(),I=(0,i.useState)({}),x=I[0],q=I[1],j=(0,i.useState)({}),S=j[0],w=j[1],P=_||{item:"createdAt",order:"desc"},O=(0,r.Z)({},(null===(e=$.current)||void 0===e?void 0:e.sort.item)||P.item,P.inneritem?(0,r.Z)({},P.inneritem,(null===(t=$.current)||void 0===t?void 0:t.sort.order)||P.order):(null===(c=$.current)||void 0===c?void 0:c.sort.order)||P.order);return(0,i.useEffect)(function(){var n=!(0,o.isEqual)(x,b),e=!(0,o.isEqual)(S,v);if(n&&(q(b),null==$||null===(r=$.current)||void 0===r||r.resetPagination()),e&&(w(v),null==$||null===(i=$.current)||void 0===i||i.resetPagination()),null!=$&&null!==(t=$.current)&&void 0!==t&&t.setSort&&!(n||e)){var t,r,i,a,s,c,u,l,d,m,p,f=null!==(a=$.current)&&void 0!==a&&null!==(s=a.sort)&&void 0!==s&&s.item&&null!==(c=$.current)&&void 0!==c&&null!==(u=c.sort)&&void 0!==u&&u.order?{item:null===(l=$.current)||void 0===l?void 0:null===(d=l.sort)||void 0===d?void 0:d.item,order:null===(m=$.current)||void 0===m?void 0:null===(p=m.sort)||void 0===p?void 0:p.order}:O;$.current.setSort(f)}},[b,v]),{initialData:u(u({},b),{},{newFilters:(null==v?void 0:v.length)>0?v:void 0,limit:(null===(l=$.current)||void 0===l?void 0:l.pageSize)==="Infinity"?null:parseInt(null===(d=$.current)||void 0===d?void 0:d.pageSize,10)||a.C1.paginationSize,offset:((null===(m=$.current)||void 0===m?void 0:m.currentPage)-1||0)*((null===(p=$.current)||void 0===p?void 0:p.pageSize)||a.C1.paginationSize),orderBy:s(null===(f=$.current)||void 0===f?void 0:null===(g=f.sort)||void 0===g?void 0:null===(y=g.item)||void 0===y?void 0:y.replace(/ORDER/i,null===(h=$.current)||void 0===h?void 0:h.sort.order))||O}),initialSort:_,ref:$}}},48829:function(n,e,t){"use strict";t.d(e,{S:function(){return r}});var r=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}},3896:function(n,e,t){"use strict";t.d(e,{X:function(){return p}});var r,i,o=t(71383),a=t(16835),s=t(59499),c=t(67294),u=t(6812),l=t(50319),d=t(75063),m=t(55863);function p(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"sessionStorage",r=(0,m.q)().user,i=(0,c.useState)(function(){try{switch(t){case"network":return e;case"sessionStorage":return JSON.parse(window.sessionStorage.getItem(n))||e}}catch(r){return e}}),o=i[0],d=i[1],p=function(e){try{var i=e instanceof Function?e(o):e;switch(d(i),t){case"network":h({variables:{accountUserId:null==r?void 0:r.accountUserId,filters:(0,s.Z)({},n,i)}});break;case"sessionStorage":window.sessionStorage.setItem(n,JSON.stringify(i))}}catch(a){}};(0,u.a)(f,{variables:{accountUserId:null==r?void 0:r.accountUserId},skip:"network"!==t,onCompleted:function(t){var r=t.accountUser;r&&d(r.filters[n]||e)}});var y=(0,l.D)(g),h=(0,a.Z)(y,1)[0];return[o,p]}var f=(0,d.Ps)(r||(r=(0,o.Z)(["\n  query GetAccountUserFilters($accountUserId: Int!) {\n    accountUser: Account_User_by_pk(id: $accountUserId) {\n      filters\n    }\n  }\n"]))),g=(0,d.Ps)(i||(i=(0,o.Z)(["\n  mutation SetAccountUserFilters($accountUserId: Int!, $filters: jsonb) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _append: { filters: $filters }) {\n      id\n    }\n  }\n"])))},32969:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return V}});var r=t(38033),i=t(16835),o=t(59499),a=t(67294),s=t(30381),c=t.n(s),u=t(11163),l=t.n(u),d=t(6812),m=t(73359),p=t(77375),f=t(57460),g=t.n(f),y=t(26447),h=t(11057),b=t(98456),v=t(90629),_=t(15861),$=t(32836),I=t(8602),x=t(9205),q=t(42846),j=t(48829),S=t(94568),w=t(72936),P=t(9164),O=t(26143),Z=t(61730),C=t(50135),A=t(90948),k=t(11994),F=t(42283),D=t(76301),T=t(6911),M=t(3896),L=t(85893);function U(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function G(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?U(Object(t),!0).forEach(function(e){(0,o.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):U(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var N=function(n){var e=n.initialFilters,t=n.filters,r=n.setFilters,o=n.open,s=n.onClose,c=(0,w.x)().user,u=(0,a.useState)(""),l=u[0],m=u[1],p=(0,Z.Z)("(max-width: 400px)"),f=(0,M.X)("form_data_".concat(e.filterType),e),g=(0,i.Z)(f,2),b=g[0],_=g[1],$=(0,F.cI)({defaultValues:b}),I=$.control,x=$.handleSubmit,q=$.register,j=$.reset,S=$.errors,P=(0,d.a)(D.K4,{variables:{accountId:c.accountId,limit:50,offset:0,q:""!==l?"%".concat(l,"%"):null}}),O=P.data,A=(O=void 0===O?{items:[]}:O).items,k=P.loading,U=function(n){var i,o,a=G(G(G({},t),n),{},{customerManagerId:null!==(i=null==n?void 0:null===(o=n.customerManager)||void 0===o?void 0:o.value)&&void 0!==i?i:null,q:n.q});r(G(G({},a),{},{q:n.q?"%".concat(n.q,"%"):null})),_(G(G({},a),{},{filterType:e.filterType})),j(),s()},N=function(){r(e),j(),s(),_(G(G({},e),{},{filterType:e.filterType}))};return(0,L.jsx)(E,{open:o,onClose:s,children:(0,L.jsx)(v.Z,{sx:{minWidth:p?"300px":"400px",padding:"20px 40px"},children:(0,L.jsxs)("form",{onSubmit:x(U),children:[(0,L.jsxs)(y.Z,{spacing:4,children:[(0,L.jsx)(C.Z,{fullWidth:!0,variant:"standard",color:"secondary",label:"Search...",name:"q",inputRef:q}),(0,L.jsx)(F.Qr,{name:"customerManager",control:I,render:function(n){var e=n.value,t=n.onChange;return(0,L.jsx)(T.q,{value:e,onChange:function(n,e){t(e)},loading:k,options:A,setSearch:m,textFieldProps:{color:"secondary",variant:"standard",label:"Select account manager"},size:"small"})}}),(0,L.jsx)(F.Qr,{name:"status",control:I,render:function(n){var e,t=n.value,r=n.onChange;return(0,L.jsx)(T.q,{limitTags:6,color:"secondary",value:t,onChange:function(n,e){return r(e)},options:[{label:"Active",value:"active"},{label:"Inactive",value:"inactive"}],textFieldProps:{label:"Select status",variant:"standard",color:"secondary",error:S.status,helperText:null===(e=S.status)||void 0===e?void 0:e.message}})}})]}),(0,L.jsxs)(y.Z,{width:"100%",direction:"row",justifyContent:"flex-end",spacing:2,sx:{margin:"20px 0"},children:[(0,L.jsx)(h.Z,{variant:"contained",color:"danger",onClick:function(){return N()},children:"Cancel"}),(0,L.jsx)(h.Z,{variant:"contained",color:"secondary",type:"submit",children:"Search"})]})]})})})},E=(0,A.ZP)(k.Z)(function(){return{display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"}}),R=t(35137);function B(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function z(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?B(Object(t),!0).forEach(function(e){(0,o.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):B(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var H="/dashboard/customers/",W=function(n){var e,t,r=n.initialFilters,o=(0,a.useState)(z({},r)),s=o[0],u=o[1],f=(0,q.x)({filters:s}),Z=f.initialData,C=f.ref,A=(0,w.x)().user,k=(0,S.s)(),F=(0,a.useState)(!1),D=F[0],T=F[1],M=(0,a.useState)(!1),U=M[0],G=M[1],E=(0,d.a)(p.kJ,{variables:z(z({assignedUser:r.assignedUser?A.id:null},Z),{},{status:Z.status.value})}),B=E.data,W=(B=void 0===B?{customers:[],meta:{aggregate:{totalCount:0}}}:B).customers,J=B.meta,Y=E.loading,V=E.refetch,X=(0,m.t)(p.kJ,{fetchPolicy:"no-cache",variables:z(z({},Z),{},{status:Z.status.value,limit:(null==J?void 0:null===(e=J.aggregate)||void 0===e?void 0:e.totalCount)||150}),onCompleted:function(n){try{var e=g().unparse(ni(n.customers)),t="data:application/octet-stream,"+encodeURIComponent(e);(0,j.S)(t,"customers.csv")}finally{G(!1)}}}),Q=(0,i.Z)(X,1)[0],K=function(n){n.stopPropagation(),G(!0),Q()},nn=function(n){return[{context:"secondary",icon:"edit",onClick:function(e){return nr(e)(n)},tooltip:"Edit"}]},ne=function(n){l().push("".concat(H,"view?id=").concat(n.id,"&tab=details"))},nt=function(n){l().push("".concat(H,"manage"))},nr=function(n){return n.stopPropagation(),function(n){l().push("".concat(H,"manage?id=").concat(n.id))}},ni=function(n){return n.map(function(n){return{name:n.name,companyNumber:n.companyNumber,vatId:n.vatId,website:n.website,status:n.status,createdAt:c()(n.createdAt).format("YYYY-MM-DD")}})},no=(0,a.useCallback)(function(){return W.map(function(n){var e,t,r,i,o=(0,x.WE)(n,"registered"),a=null==o?void 0:null===(e=o.address)||void 0===e?void 0:e.city;return{id:n.id,managerId:null==n?void 0:null===(t=n.manager)||void 0===t?void 0:t.id,name:n.name,managerName:n.manager?"".concat(n.manager.nameFirst," ").concat(n.manager.nameLast," "):"Unassigned",contactName:null!==(r=n.contactUsers)&&void 0!==r&&r.length?"".concat(n.contactUsers[0].user.nameFirst," ").concat(n.contactUsers[0].user.nameLast):"Unassigned",contactId:(null===(i=n.contactUsers)||void 0===i?void 0:i.length)&&n.contactUsers[0].user.id,city:a||"",properties:n.locations.length||0,createdAt:c()(n.createdAt).format("YYYY-MM-DD"),status:n.status.charAt(0).toUpperCase()+n.status.slice(1,n.status.length),actions:""}})},[W]),na=(0,a.useMemo)(function(){var n={};return!no().length&&(null!=Z&&Z.q||null!=Z&&Z.customerManagerId)?{title:"No results",subtitleFirstLine:"The filters you have applied have returned no results",subtitleSecondLine:"Please amend and try again if necessary."}:{title:"No customers",subtitleFirstLine:"You currently have no customers set up in the system",subtitleSecondLine:"Click\xa0create customer to get started building.",buttonText:"Create customer",onAction:nt}},[null==Z?void 0:Z.customerManagerId,null==Z?void 0:Z.q,no]);return(0,L.jsxs)(L.Fragment,{children:[D&&(0,L.jsx)(N,{initialFilters:r,open:D,filters:s,setFilters:u,onClose:function(){return T(!1)}}),(0,L.jsxs)(y.Z,{width:"100%",spacing:2,sx:{height:"100%"},children:[(0,L.jsxs)(y.Z,{width:"100%",direction:"row",justifyContent:"space-between",children:[(0,L.jsx)(h.Z,{variant:"contained",startIcon:(0,L.jsx)(I.Z,{}),onClick:function(){return T(!0)},children:"Filters"}),(0,L.jsxs)(y.Z,{direction:"row",spacing:2,children:[(0,L.jsx)(h.Z,{variant:"contained",color:"secondary",onClick:nt,children:"Create customer"}),!k&&(0,L.jsx)(h.Z,{startIcon:!U&&(0,L.jsx)("img",{src:"/static/icons/csv.svg"}),disabled:U,variant:"contained",color:"success",onClick:K,children:U?(0,L.jsx)(b.Z,{size:20,color:"secondary"}):"Export"})]})]}),(0,L.jsxs)(v.Z,{sx:{padding:"16px 0px",height:"calc(100% - 52px)"},children:[(0,L.jsx)(_.Z,{ml:2,variant:"h5",sx:{fontWeight:600,marginBottom:"15px"},children:"Customers"}),null!==(t=no())&&void 0!==t&&t.length?(0,L.jsx)($.i,{ref:C,loading:Y,columns:[{flex:1,field:"name",headerName:"Name",minWidth:300},{flex:1,field:"manager",headerName:"Account manager",minWidth:130,sortName:'{"Manager": {"nameFirst": "ORDER"}}',renderCell:function(n){var e=n.row,t=e.managerName,r=e.managerId;return(0,L.jsx)(P.r,{color:"secondary",href:"/dashboard/users/view?id=".concat(r),children:t})}},{flex:1,field:"contactName",headerName:"Contact",minWidth:130,sortable:!1,renderCell:function(n){var e=n.row,t=e.contactName,r=e.contactId;return(0,L.jsx)(P.r,{color:"secondary",href:"/dashboard/users/view?id=".concat(r),children:t})}},{flex:1,field:"city",headerName:"City",sortable:!1,minWidth:130},{flex:1,field:"properties",headerName:"Properties",sortName:'{"Account_Locations_aggregate": {"count": "ORDER"}}',minWidth:130},{flex:1,field:"createdAt",headerName:"Created",minWidth:130},{flex:1,field:"status",headerName:"Status",minWidth:130,sortable:!1},{flex:1,field:"actions",headerName:"Actions",minWidth:130,sortable:!1,renderCell:function(n){var e=n.row;return(0,L.jsx)(O.C,{actionsData:nn,row:e})}}],rows:no(),columnVisibilityModel:{},meta:J,refetch:V,autoHeight:!1,containerHeight:"calc(100% - 52px)",onRowClick:ne}):!Y&&(0,L.jsx)(R.C,z({imageSrc:"/static/icons/no_locations_found.svg"},na))]})]})]})},J={q:null,status:{label:"Active",value:"active"},customerManagerId:null,filterType:"customers_list"},Y=function(){return(0,L.jsx)(W,{initialFilters:J})};Y.getLayout=function(n){return(0,L.jsx)(r.Z,{children:n})};var V=Y},65725:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/customers",function(){return t(32969)}])}},function(n){n.O(0,[3662,2283,212,8890,1100,4135,5020,6043,4244,3776,2329,778,1023,4253,3148,6344,6068,8033,9774,2888,179],function(){return n(n.s=65725)}),_N_E=n.O()}]);