(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6199],{15154:function(n,e,t){"use strict";t.d(e,{C:function(){return s},w:function(){return o}});var r=t(59499);function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach(function(e){(0,r.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var s=function(n){return n=a(a({},n.supplierDetails),n)},o=function(n,e){var t=n.assignedUser,r=n.coverage,i=n.service,a=n.status,s=n.q,o={type:{_eq:"supplier"}};return t&&(o.managerId={_eq:e.id}),i&&(o.Services={Service:{id:{_eq:i.value}}}),r&&(o.PostcodeAreas={postcodeAreaId:{_eq:r.value}}),a&&(o.status={_eq:a.value}),s&&(o.name={_ilike:s}),o}},95507:function(n,e,t){"use strict";t.d(e,{f:function(){return i}});var r=t(74231),i=function(){return(0,r.Ry)().shape({managerSelected:(0,r.Ry)().required(),name:(0,r.Z_)().required(),website:(0,r.Z_)(),companyNumber:(0,r.Z_)(),vatId:(0,r.Z_)(),status:(0,r.Z_)().oneOf(["active","inactive"]).required(),typeOfOrganisation:(0,r.Z_)(),quotingEmail:(0,r.Z_)(),utrNumber:(0,r.Z_)(),cisRegistered:(0,r.Z_)(),contactUseremail:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUsernameFirst:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUsernameLast:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUserphone:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)()}),contactUserstatus:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()})})}},7581:function(n,e,t){"use strict";t.d(e,{D7:function(){return $},KQ:function(){return I},R7:function(){return b},j$:function(){return A},kx:function(){return h},l1:function(){return y},lk:function(){return v},ys:function(){return g}});var r,i,a,s,o,u,c,d,l,p,m,_=t(71383),f=t(75063),g=(0,f.Ps)(r||(r=(0,_.Z)(['\n  query GetSuppliers(\n    $limit: Int\n    $offset: Int\n    $orderBy: Account_order_by!\n    $where: Account_bool_exp\n  ) {\n    suppliers: Account(limit: $limit, offset: $offset, where: $where, order_by: [$orderBy]) {\n      id\n      createdAt\n      name\n      status\n      companyNumber\n      vatId\n      website\n      jobs: SupplierJobs_aggregate {\n        aggregate {\n          count\n          max {\n            scheduledAt\n          }\n          sum {\n            amount\n          }\n        }\n      }\n      jobList: SupplierJobs(order_by: { createdAt: desc }) {\n        id\n      }\n      services: Services(where: { entity: { _eq: "Account" } }) {\n        id\n        service: Service {\n          id\n          name\n        }\n      }\n      addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n        id\n        registered\n        operating\n        trading\n        invoice\n        status\n        createdAt\n        address: Address {\n          id\n          name\n          addressLine1\n          addressLine2\n          addressLine3\n          city\n          county\n          geo\n          postCode\n          country: Country {\n            id\n            name\n          }\n        }\n      }\n      locations: Account_Locations {\n        id\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        id\n        role\n        position\n        isContact\n        lastSignInAt\n        userId\n        user: User {\n          id\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n          email\n          createdAt\n          fullName\n          accounts: Account_Users {\n            id\n            role\n            position\n            isContact\n            status\n            account: Account {\n              id\n              name\n              type\n            }\n          }\n        }\n      }\n    }\n    meta: Account_aggregate(where: $where) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),y=(0,f.Ps)(i||(i=(0,_.Z)(['\n  query GetSupplier($id: Int!) {\n    supplier: Account_by_pk(id: $id) {\n      id\n      companyNumber\n      createdAt\n      name\n      status\n      type\n      updatedAt\n      website\n      clientType\n      managerId\n      vatId\n      meta\n      statusLogs: StatusLog(where: { entity: { _eq: "Account" } }) {\n        id\n        status\n        createdAt\n      }\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      manager: Manager {\n        id\n        fullName\n      }\n      addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n        id\n        registered\n        operating\n        trading\n        invoice\n        status\n        createdAt\n        address: Address {\n          id\n          name\n          addressLine1\n          addressLine2\n          addressLine3\n          city\n          county\n          geo\n          postCode\n          country: Country {\n            id\n            name\n          }\n        }\n      }\n\n      details: SupplierDetail {\n        cisRegistered\n        quotingEmail\n        typeOfOrganisation\n        utrNumber\n        accountId\n      }\n\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        role\n        position\n        isContact\n        lastSignInAt\n        userId\n        user: User {\n          id\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n          email\n          createdAt\n          fullName\n        }\n      }\n      usersMeta: Account_Users_aggregate {\n        aggregate {\n          count\n        }\n      }\n\n      compliances: Compliances(where: { entity: { _eq: "Account" } }, order_by: { expiryAt: asc }) {\n        id\n        createdAt\n        entity\n        entityId\n        expiryAt\n        regNum\n        insuranceAmount\n        meta\n      }\n      coverage: PostcodeAreas(where: { entity: { _eq: "Account" }, status: { _eq: "active" } }) {\n        id\n        status\n        createdAt\n        area: PostcodeArea {\n          id\n          name\n          area\n        }\n      }\n      services: Services {\n        serviceId\n        createdAt\n      }\n      references: References {\n        id\n        createdAt\n      }\n    }\n  }\n']))),b=(0,f.Ps)(a||(a=(0,_.Z)(["\n  query GetSupplierManage($id: Int!) {\n    supplier: Account_by_pk(id: $id) {\n      id\n      name\n      website\n      companyNumber\n      vatId\n      status\n      meta\n      managerSelected: Manager {\n        id\n        label: fullName\n        value: id\n      }\n      supplierDetails: SupplierDetail {\n        id\n        cisRegistered\n        quotingEmail\n        typeOfOrganisation\n        utrNumber\n      }\n    }\n  }\n"]))),I=(0,f.Ps)(s||(s=(0,_.Z)(["\n  mutation AddSupplier($objects: [Account_insert_input!]!) {\n    insert_Account(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"])));(0,f.Ps)(o||(o=(0,_.Z)(["\n  mutation AddSupplierDetail($objects: [SupplierDetail_insert_input!]!) {\n    insert_SupplierDetail(objects: $objects) {\n      returning {\n        id\n        accountId\n      }\n    }\n  }\n"]))),(0,f.Ps)(u||(u=(0,_.Z)(["\n  mutation AddSupplierOffer($objects: [SupplierOffer_insert_input!]!) {\n    insert_SupplierOffer(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"])));var $=(0,f.Ps)(c||(c=(0,_.Z)(["\n  mutation UpdateSupplier(\n    $supplierId: Int!\n    $supplier: Account_set_input\n    $supplierDetails: SupplierDetail_set_input\n  ) {\n    update_SupplierDetail(where: { accountId: { _eq: $supplierId } }, _set: $supplierDetails) {\n      returning {\n        id\n      }\n    }\n\n    update_Account_by_pk(pk_columns: { id: $supplierId }, _set: $supplier) {\n      id\n    }\n  }\n"]))),v=(0,f.Ps)(d||(d=(0,_.Z)(['\n  query GetPostCodeAreas(\n    $limit: Int\n    $offset: Int\n    $q: String\n    $supplierId: Int\n    $status: String = "active"\n  ) {\n    coverage: PostcodeArea_Entity(\n      where: {\n        entity: { _eq: "Account" }\n        entityId: { _eq: $supplierId }\n        status: { _eq: $status }\n        PostcodeArea: { name: { _ilike: $q } }\n      }\n      order_by: { PostcodeArea: { name: asc } }\n      limit: $limit\n      offset: $offset\n    ) {\n      id\n      status\n      createdAt\n      area: PostcodeArea {\n        id\n        name\n        area\n      }\n    }\n    meta: PostcodeArea_Entity_aggregate(\n      where: {\n        entity: { _eq: "Account" }\n        entityId: { _eq: $supplierId }\n        status: { _eq: $status }\n        PostcodeArea: { name: { _ilike: $q } }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),A=(0,f.Ps)(l||(l=(0,_.Z)(["\n  query GetPostCodeAreaForSelect($countryId: Int, $q: String) {\n    items: PostcodeArea(\n      where: { name: { _ilike: $q }, countryId: { _eq: $countryId } }\n      order_by: { name: asc }\n    ) {\n      area\n      label: name\n      value: id\n    }\n  }\n"]))),h=(0,f.Ps)(p||(p=(0,_.Z)(['\n  query GetServicesForSelect($q: String, $limit: Int, $offset: Int) {\n    items: Service(\n      where: { name: { _ilike: $q }, status: { _eq: "active" } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n'])));(0,f.Ps)(m||(m=(0,_.Z)(['\n  query GetFinancialJob(\n    $adminId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $startDate: timestamptz\n    $limit: Int\n    $status: [String]\n    $managerId: Int\n    $locationId: Int\n    $offset: Int\n    $supplierId: Int\n    $q: String\n    $orderBy: Job_order_by!\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        type: { _in: ["reactive", "ppm"] }\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        supplierId: { _eq: $supplierId }\n        managerId: { _eq: $managerId }\n        adminId: { _eq: $adminId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      description\n      reference\n      timingStart\n      scheduledAt\n      createdAt\n\n      customerTotal: customerFinances(path: "amountInfo.total")\n      supplierTotal: supplierFinances(path: "amountInfo.total")\n      customerVatTotal: customerFinances(path: "amountInfo.vatTotal")\n      supplierVatTotal: supplierFinances(path: "amountInfo.vatTotal")\n      customerExpensesTotal: customerFinances(path: "expensesInfo.expensesTotal")\n      supplierExpensesTotal: supplierFinances(path: "expensesInfo.expensesTotal")\n      customerRebateAmount: customerFinances(path: "rebate.amount")\n\n      slaId\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n      customer: Customer {\n        id\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      sla: SLA {\n        name\n      }\n      manager: Manager {\n        fullName\n        nameLast\n        nameFirst\n        id\n      }\n      service: Service {\n        id\n        name\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        type: { _in: ["reactive", "ppm"] }\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        supplierId: { _eq: $supplierId }\n        managerId: { _eq: $managerId }\n        adminId: { _eq: $adminId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n'])))},32844:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return w}});var r=t(19076),i=t(59499),a=t(16835),s=t(50029),o=t(64687),u=t.n(o),c=t(67294),d=t(6812),l=t(50319),p=t(7581),m=t(11163),_=t.n(m),f=t(55863),g=t(73987),y=t(43297),b=t(15154),I=t(95507),$=t(40755),v=t(85893);function A(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function h(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?A(Object(t),!0).forEach(function(e){(0,i.Z)(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):A(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}var q=function(){var n=(0,f.q)(),e=(0,c.useContext)(g.Z).user,t=(0,m.useRouter)().query,r=(0,c.useState)(!1),i=r[0],o=r[1],A=(0,c.useState)([]),q=A[0],w=A[1],S=(0,c.useState)(!1),O=S[0],P=S[1],j=(0,$.RM)(e.id),Z=(0,d.a)(p.R7,{variables:{id:t.id}}),D=Z.loading,k=Z.data,C=(k=void 0===k?{supplier:{}}:k).supplier,x=(0,$.BR)({adminId:e.id,xeroClientId:t.clientId||null},[n.admin]),N=x.onCallAuthorize,E=x.onGetXeroContacts;(0,c.useEffect)(function(){var n,e=(n=(0,s.Z)(u().mark(function n(e){var t,r;return u().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,E(e);case 3:r=(0,n.sent).map(function(n){return{label:"".concat(n.name," - ").concat(n.contactID),value:n.contactID}}),P(!1),w(r),n.next=12;break;case 9:n.prev=9,n.t0=n.catch(0),P(!0);case 12:case"end":return n.stop()}},n,null,[[0,9]])})),function(e){return n.apply(this,arguments)});null!=j&&j.companyId&&e(j.companyId)},[null==j?void 0:j.companyId]);var U,F=(0,l.D)(p.D7,{onCompleted:function(n){var e=n.update_Account_by_pk.id;_().push("".concat("/dashboard/suppliers/","view?id=").concat(e))}}),L=(0,a.Z)(F,1)[0],R=(U=(0,s.Z)(u().mark(function n(e){var t,r;return u().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,o(!0),r={supplierId:C.id,supplier:{managerId:e.managerSelected.value,name:e.name,website:e.website||null,companyNumber:e.companyNumber||null,vatId:e.vatId||null,status:e.status},supplierDetails:{typeOfOrganisation:e.typeOfOrganisation||null,quotingEmail:e.quotingEmail||null,utrNumber:e.utrNumber||null,cisRegistered:e.cisRegistered||null}},null!==(t=e.xeroContact)&&void 0!==t&&t.value&&(r.supplier.meta=h(h({},C.meta),{},{xeroContactId:e.xeroContact.value,xeroAssignedCompanyId:null==j?void 0:j.companyId})),n.next=6,L({variables:r});case 6:return n.prev=6,o(!1),n.finish(6);case 9:case"end":return n.stop()}},n,null,[[0,,6,9]])})),function(n){return U.apply(this,arguments)}),T=function(){N(window.location.href)};return!D&&(0,v.jsx)(y.P,{loading:i,account:(0,b.C)(C),onSubmit:R,schema:I.f,type:"supplier",displayXeroContacts:!!(null!=j&&j.clientId),xeroContacts:q,displaySignin:O,handleXeroAuthorize:T})},w=function(){return(0,v.jsx)(r.Z,{pageHeading:{heading:"Suppliers - Edit"},View:(0,v.jsx)(q,{})})}},65162:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/suppliers/edit",function(){return t(32844)}])}},function(n){n.O(0,[2283,212,8890,619,1100,1336,6043,5370,3911,3776,9241,9781,6357,1772,3297,9774,2888,179],function(){return n(n.s=65162)}),_N_E=n.O()}]);